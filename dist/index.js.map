{"version":3,"sources":["../src/index.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport { useSnapshot } from 'valtio/react';\nimport { useAsync } from '@siberiacancode/reactuse';\nimport { proxy } from 'valtio';\n\nexport default function anyModal<AnyModals extends { type: string }>(\n\tloaderNode: (modal: AnyModals) => ReactNode | null = () => null,\n\terrorNode: (error: Error) => ReactNode | null = () => null\n) {\n\tinterface AnyModalsState {\n\t\tmodal: AnyModals | null;\n\t\tmodalsStack: AnyModals[];\n\t}\n\n\tconst modalsState = proxy<AnyModalsState>({\n\t\tmodal: null,\n\t\tmodalsStack: [],\n\t});\n\n\ttype ExtractModal<T extends NonNullable<AnyModals>['type']> = Extract<NonNullable<AnyModals>, { type: T }>;\n\n\tinterface ModalProps<T extends NonNullable<AnyModals>['type']> {\n\t\ttype: T;\n\t\trender: (modal: ExtractModal<T>) => ReactNode;\n\t}\n\n\tfunction show(modal: AnyModals) {\n\t\tif (modalsState.modal) {\n\t\t\tmodalsState.modalsStack.push(modalsState.modal);\n\t\t}\n\t\tmodalsState.modal = modal;\n\t}\n\n\tfunction prev() {\n\t\tmodalsState.modal = modalsState.modalsStack.pop() || null;\n\t}\n\n\tfunction closeAll() {\n\t\tmodalsState.modalsStack = [];\n\t\tmodalsState.modal = null;\n\t}\n\n\tfunction Modal<T extends NonNullable<AnyModals>['type']>({ type, render }: ModalProps<T>) {\n\t\tconst { modal } = useSnapshot(modalsState);\n\n\t\tif (!modal || modal.type !== type) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn render(modal as ExtractModal<T>);\n\t}\n\n\tfunction create<T extends NonNullable<AnyModals>['type']>(\n\t\ttype: T,\n\t\tBody: React.FC<{ modal: ExtractModal<T> }>\n\t) {\n\t\treturn function Wrapper() {\n\t\t\treturn <Modal\n\t\t\ttype={type}\n\t\t\trender={(modal) => <Body modal={modal} />}\n\t\t\t/>;\n\t\t};\n\t}\n\n\ttype ModalType = NonNullable<AnyModals>['type'];\n\ttype ModalOf<K extends ModalType> = Extract<AnyModals, { type: K }>;\n\n\ttype Result<F> =\n\tF extends readonly (infer P)[]\n\t? { [I in keyof F]: Awaited<F[I]> }\n\t: never;\n\n\tfunction createWithFetch<\n\tK extends ModalType,\n\tF\n\t>(\n\t\tkind: K,\n\t\tfetchersFn: (m: ModalOf<K>) => F,\n\t  Body: React.FC<{\n\t\t  modal: ModalOf<K>;\n\t\t  data: Result<F>;\n\t  }>\n\t) {\n\t\tfunction ModalContent({ modal }: { modal: ModalOf<K> }) {\n\t\t\tconst { isLoading, data, error } = useAsync<Result<F>>(\n\t\t\t\tasync () => {\n\t\t\t\t\tconst promises = fetchersFn(modal) as unknown as readonly unknown[];\n\t\t\t\t\treturn await Promise.all(\n\t\t\t\t\t\tpromises as readonly unknown[]\n\t\t\t\t\t) as unknown as Result<F>;\n\t\t\t\t},\n\t\t\t\t[modal],\n\t\t\t);\n\n\t\t\tif (error) {\n\t\t\t\treturn errorNode(error);\n\t\t\t}\n\n\t\t\tif (isLoading || !data) {\n\t\t\t\treturn loaderNode(modal);\n\t\t\t}\n\n\t\t\treturn <Body modal={modal} data={data} />;\n\t\t}\n\n\t\treturn function Wrapper() {\n\t\t\treturn <Modal\n\t\t\ttype={kind}\n\t\t\trender={(modal) => <ModalContent modal={modal} />}\n\t\t\t/>;\n\t\t};\n\t}\n\n\treturn {\n\t\tshow,\n\t\tprev,\n\t\tcloseAll,\n\t\tcreate,\n\t\tcreateWithFetch,\n\t\tmodalsState,\n\t};\n}"],"mappings":";AACA,SAAS,mBAAmB;AAC5B,SAAS,gBAAgB;AACzB,SAAS,aAAa;AAwDA;AAtDP,SAAR,SACN,aAAqD,MAAM,MAC3D,YAAgD,MAAM,MACrD;AAMD,QAAM,cAAc,MAAsB;AAAA,IACzC,OAAO;AAAA,IACP,aAAa,CAAC;AAAA,EACf,CAAC;AASD,WAAS,KAAK,OAAkB;AAC/B,QAAI,YAAY,OAAO;AACtB,kBAAY,YAAY,KAAK,YAAY,KAAK;AAAA,IAC/C;AACA,gBAAY,QAAQ;AAAA,EACrB;AAEA,WAAS,OAAO;AACf,gBAAY,QAAQ,YAAY,YAAY,IAAI,KAAK;AAAA,EACtD;AAEA,WAAS,WAAW;AACnB,gBAAY,cAAc,CAAC;AAC3B,gBAAY,QAAQ;AAAA,EACrB;AAEA,WAAS,MAAgD,EAAE,MAAM,OAAO,GAAkB;AACzF,UAAM,EAAE,MAAM,IAAI,YAAY,WAAW;AAEzC,QAAI,CAAC,SAAS,MAAM,SAAS,MAAM;AAClC,aAAO;AAAA,IACR;AAEA,WAAO,OAAO,KAAwB;AAAA,EACvC;AAEA,WAAS,OACR,MACA,MACC;AACD,WAAO,SAAS,UAAU;AACzB,aAAO;AAAA,QAAC;AAAA;AAAA,UACR;AAAA,UACA,QAAQ,CAAC,UAAU,oBAAC,QAAK,OAAc;AAAA;AAAA,MACvC;AAAA,IACD;AAAA,EACD;AAUA,WAAS,gBAIR,MACA,YACC,MAIA;AACD,aAAS,aAAa,EAAE,MAAM,GAA0B;AACvD,YAAM,EAAE,WAAW,MAAM,MAAM,IAAI;AAAA,QAClC,YAAY;AACX,gBAAM,WAAW,WAAW,KAAK;AACjC,iBAAO,MAAM,QAAQ;AAAA,YACpB;AAAA,UACD;AAAA,QACD;AAAA,QACA,CAAC,KAAK;AAAA,MACP;AAEA,UAAI,OAAO;AACV,eAAO,UAAU,KAAK;AAAA,MACvB;AAEA,UAAI,aAAa,CAAC,MAAM;AACvB,eAAO,WAAW,KAAK;AAAA,MACxB;AAEA,aAAO,oBAAC,QAAK,OAAc,MAAY;AAAA,IACxC;AAEA,WAAO,SAAS,UAAU;AACzB,aAAO;AAAA,QAAC;AAAA;AAAA,UACR,MAAM;AAAA,UACN,QAAQ,CAAC,UAAU,oBAAC,gBAAa,OAAc;AAAA;AAAA,MAC/C;AAAA,IACD;AAAA,EACD;AAEA,SAAO;AAAA,IACN;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACD;AACD;","names":[]}